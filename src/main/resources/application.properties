spring.main.banner-mode=off
server.servlet.context-path=/veilarboppfolging

management.endpoint.metrics.enabled=true
management.endpoints.web.base-path=/internal
management.endpoints.web.exposure.include=prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Default er 1 som kan f√∏re til at lange jobber blokkerer for andre
spring.task.scheduling.pool.size=5

# Vi migrerer databasen med flyway manuelt
spring.flyway.enabled=false

# Vi setter opp kobling til database manuelt
spring.data.jdbc.repositories.enabled=false

# Application environment
# From config map "pto-config"
app.env.openAmDiscoveryUrl=${OPENAM_DISCOVERY_URL}
app.env.veilarbloginOpenAmClientId=${VEILARBLOGIN_OPENAM_CLIENT_ID}
app.env.openAmRefreshUrl=${VEILARBLOGIN_OPENAM_REFRESH_URL}
app.env.openAmRedirectUrl=${OIDC_REDIRECT_URL}
app.env.openAmIssoRpUsername=${ISSO_RP_USER_USERNAME}
app.env.openAmIssoRpPassword=${ISSO_RP_USER_PASSWORD}
app.env.aadDiscoveryUrl=${AAD_DISCOVERY_URL}
app.env.veilarbloginAadClientId=${VEILARBLOGIN_AAD_CLIENT_ID}
app.env.abacUrl=${ABAC_PDP_ENDPOINT_URL}
app.env.norg2Url=${NORG2_URL}
app.env.aktorregisterUrl=${AKTOERREGISTER_API_V1_URL}
app.env.soapStsUrl=${SECURITYTOKENSERVICE_URL}
app.env.dbUrl=${VEILARBOPPFOLGINGDB_URL}
app.env.arbeidsrettetDialogUrl=${ARBEIDSRETTET_DIALOG_URL}
app.env.kafkaBrokersUrl=${KAFKA_BROKERS_URL}
app.env.naisStsDiscoveryUrl=${SECURITY_TOKEN_SERVICE_DISCOVERY_URL}
app.env.naisStsClientId=${SECURITY_TOKEN_SERVICE_CLIENT_ID}
app.env.ytelseskontraktV3Endpoint=${VIRKSOMHET_YTELSESKONTRAKT_V3_ENDPOINTURL}
app.env.varselOppgaveV1Endpoint=${VARSELOPPGAVE_V1_ENDPOINTURL}
app.env.behandleArbeidssoekerV1Endpoint=${VIRKSOMHET_BEHANDLEARBEIDSSOEKER_V1_ENDPOINTURL}

# From config map "loginservice-idporten"
app.env.loginserviceIdportenAudience=${LOGINSERVICE_IDPORTEN_AUDIENCE}
app.env.loginserviceIdportenDiscoveryUrl=${LOGINSERVICE_IDPORTEN_DISCOVERY_URL}
