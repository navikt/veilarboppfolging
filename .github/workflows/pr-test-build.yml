name: Test, build, Sonar
on:
  pull_request:
    types: [opened, synchronize, reopened]
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Check if actor is member of organization
        id: check_membership
        run: |
          # Funksjon for Ã¥ URL-escape en streng
          escape_string() {
          echo -n "$1" | jq -sRr @uri
          }

          # Escape github.actor
          escaped_actor=$(escape_string "${{ github.actor }}")
          
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/orgs/navikt/members/$escaped_actor")
          
          if [ "$RESPONSE" -eq 204 ]; then
            echo "is_member=true" >> $GITHUB_ENV
          else
            echo "is_member=false" >> $GITHUB_ENV
          fi

      - name: Checkout with fork and member check PR
        if: ${{ github.event_name == 'pull_request_target' &&  (env.is_member == 'true' || github.actor == 'dependabot[bot]') }}
        uses: actions/checkout@v4
        with:
            ref: ${{ github.event.pull_request.head.sha }}
            fetch-depth: 0

      - name: Default checkout
        if: ${{ github.event_name != 'pull_request_target' || !(env.is_member == 'true' || github.actor == 'dependabot[bot]') }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Abort if PR is from fork and actor is not member
        if: ${{ github.event_name == 'pull_request_target' && (env.is_member == 'false' || github.actor != 'dependabot[bot]') }}
        run: |
          echo "PR is from a fork and the actor is not a member of the organization. Aborting."
          exit 1

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "8.13"
          cache-read-only: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/gradle' }}
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar
          key: sonar-${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            sonar-${{ runner.os }}-

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew --configuration-cache --build-cache --scan --configuration-cache-problems=warn sonar
